exports.Test=function(tArgs) {
   var z, db
      ,  pc=require('pops/pops.core')
   	,	pdbm=require('pops/db/pops.db.mongo')
   ;
	LOG('\n'+'_'.Repeat(60) + '\n pops/db/mongo|db:schemas\n' + '_'.Repeat(60));

	pc.cout('BOBOBOBO');

	tArgs.ASync();

	if(2) {//-stuff
		var ConnectEvt, Find1CB, InsertCB;

		ConnectEvt=function(e, db) {
			pc.cout('CONNECTED');

			LOG('\n'+'#'.Repeat(30) + '\n Creating/getting collection(schema): test. Then creating new schema document.\n'+'#'.Repeat(30));
			var s=db.schemas('user')
				,	ss=s.NEW({ firstName: 'Rachel', lastName: 'Morgan' })
			;
			
/*			pc.cout('[[[[[[[[[[[[]]]]]]]]]]]]');
			pc.cout('s='+JSON.SafeStr(s, 2));
			pc.cout('[[[[[[]]]]]]');
			pc.cout('ss='+JSON.SafeStr(ss, 2));
			pc.cout('[[[[[[[[[[[[]]]]]]]]]]]]');
//*/			
			pc.cout('-s.NAME='+s.NAME);
			pc.cout('ss.NAME='+ss.NAME);
			pc.cout('ss.firstName='+ss.firstName);
			pc.cout('ss.lastName='+ss.lastName);
			
			LOG('\n'+'#'.Repeat(30) + '\n Inserting document into collection(schema).\n'+'#'.Repeat(30));
			ss.INSERT(InsertCB);

		}
		InsertCB=function(err, result, db, schema) {
			if(err) { tArgs.Fail('<db:mongo:schemas:InsertCB - '+err); tArgs.Done(); return; };
			pc.cout('document added to collection.');
			LOG('\n'+'#'.Repeat(30) + '\n Retrieving document from collection(schema).\n'+'#'.Repeat(30));
			schema.Find({ firstName: 'Rachel' }, Find1CB);
		};
		Find1CB= function(err, cur, db, schema) {
			if(err) { tArgs.Fail('<db:mongo:schemas:Find1CB - '+err); tArgs.Done(); return; };
			var last=0;
			cur.Each(function(err, itm, index) {
				if(itm==null) {
					if(last) last.REMOVE();
					tArgs.Done();
					return;
				};
				pc.cout('* item #'+index+' = '+JSON.stringify(itm.VALUES));
				last=itm;
				//pc.cout('itm='+pc.$Str(itm.OBJ, 2, 3));
			});
		};

	};

	pdbm.Schema({
			NAME: 'testSchema'
		,	id: String
		,	firstName: String
		,	middleName: String
		,	lastName: String
		,	birthday: Date
	});

	LOG('-'.Repeat(40) + '\n db with schemas <db> ##01\n' + '-'.Repeat(40));
	LOG('\n'+'#'.Repeat(30) + '\n Creating db instance and connecting.\n'+'#'.Repeat(30));
	db=new pdbm.db({
			autoConnect: 2
		,	name: 'test'
		,	host: 'localhost'
		,	port: 1002
		,	schemas: {
					user: {
							id: 'String'
						,	firstName: 'String'
						,	middleName: 'String'
						,	lastName: 'String'
						,	birthday: 'Date'
					}
				,	puser: {
							id: 'String'
						,	firstName: 'String'
						,	middleName: 'String'
						,	lastName: 'String'
						,	birthday: 'Date'
					}
			}
		,	ON: { 
				connect: ConnectEvt
			}
	});
};